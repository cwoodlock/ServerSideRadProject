package com.ships.controllers;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.ships.model.OrderInfo;
import com.ships.model.Ship;
import com.ships.model.ShippingCompany;
import com.ships.services.OrderInfoService;
import com.ships.services.ShipService;
import com.ships.services.ShippingCompanyService;

public class OrderController {
	
	//These are beans that will be used to handle data
	@Autowired 
	private OrderInfoService orderInfoService;;
	
	@Autowired 
	private ShipService shipService;
	
	@Autowired 
	private ShippingCompanyService shippingCompanyService;
	
	//Method to display table
	@RequestMapping(value = "/showOrders", method=RequestMethod.GET)
	public String listOrders(Model model) {
		
		List<OrderInfo> orderInfos = orderInfoService.findAll();	
		model.addAttribute("orderInfos", orderInfos);			

		return "showOrderInfo";
	}
	
	@RequestMapping(value = "/createOrder", method=RequestMethod.GET)
	public String createOrderGET(Model model) {


		Map<Integer, String> shippingCompanyList = ShipCompanyList();					// Map the id to the name and the balance (transformed into a string)
		model.addAttribute("shippingCompanyList", shippingCompanyList);					// it links the data to the returned page containing "shippingCompanyList" attribute
		
		Map<Integer, String> shipList = ShipList(); 									// Map the id to the name and the cost (transformed into a string)
		model.addAttribute("shipList", shipList);										// it links the data to the returned page containing "shipList" attribute	
		
		OrderInfo orderInfo = new OrderInfo();											// it creates a new order
		model.addAttribute("orderInfo", orderInfo);										// it links the data to the returned page containing "orderInfo" attribute
		
		return "addOrderInfo";
	}
	
	

}
